name: Binary Build and Release

on:
  push:
    branches: ["main"]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13t'

      - name: Install UPX
        run: |
          sudo apt update -y
          sudo apt install -y upx

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies with uv
        run: uv sync --frozen --no-cache

      - name: Build executable with PyInstaller
        run: uv run pyinstaller --onefile -n HTTP-Ssak3 main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: HTTP-Ssak3
          path: dist/HTTP-Ssak3

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          version=$(grep '^version = ' pyproject.toml | awk -F '"' '{print $2}')
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "tag_name=${version}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.tag_name }}
          release_name: Release ${{ steps.get_version.outputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/HTTP-Ssak3
          asset_name: HTTP-Ssak3
          asset_content_type: application/octet-stream
